// Generated by BUCKLESCRIPT VERSION 5.0.3, PLEASE EDIT WITH CARE
'use strict';

var Curry = require("bs-platform/lib/js/curry.js");
var React = require("react");

function countReducer(changeBy, reset, state, action) {
  switch (action) {
    case 0 : 
        return state + changeBy | 0;
    case 1 : 
        return state - changeBy | 0;
    case 2 : 
        return reset;
    
  }
}

function useCount($staropt$star, $staropt$star$1, param) {
  var initialCount = $staropt$star !== undefined ? $staropt$star : 0;
  var changeBy = $staropt$star$1 !== undefined ? $staropt$star$1 : 1;
  var match = React.useReducer((function (param, param$1) {
          return countReducer(changeBy, initialCount, param, param$1);
        }), initialCount);
  return /* record */[
          /* state */match[0],
          /* dispatch */match[1]
        ];
}

function App(Props) {
  var match = useCount(undefined, undefined, /* () */0);
  var dispatch = match[/* dispatch */1];
  return React.createElement(React.Fragment, undefined, React.createElement("div", {
                  className: "flex"
                }, React.createElement("h2", undefined, String(match[/* state */0])), React.createElement("button", {
                      onClick: (function (param) {
                          return Curry._1(dispatch, /* Increment */0);
                        })
                    }, "Increment"), React.createElement("button", {
                      onClick: (function (param) {
                          return Curry._1(dispatch, /* Decrement */1);
                        })
                    }, "Decrement"), React.createElement("button", {
                      onClick: (function (param) {
                          return Curry._1(dispatch, /* Reset */2);
                        })
                    }, "Reset")));
}

var make = App;

exports.countReducer = countReducer;
exports.useCount = useCount;
exports.make = make;
/* react Not a pure module */
